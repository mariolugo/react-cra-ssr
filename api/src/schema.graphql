# import Link, Vote, LinkSubscriptionPayload, VoteSubscriptionPayload from "./generated/prisma.graphql"

type Query {
  feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
}

type Feed {
  links: [Link!]!
  count: Int!
}

type Mutation {
  post(url: String!, description: String!): Link!
  signup(email: String!, password: String!, firstName: String!, lastName: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  vote(linkId: ID!): Vote
  facebookSignIn(code: String!): AuthPayload
  editUser(firstName: String!, lastName: String!, gender: String, occupation: String, studying: String, birthDay: DateTime, working: String, languages: [String!], userPersonality: [String!], userLifeStyle: [String!], userMusic: [String!], userSports: [String!], userMovies: [String!], userExtra: String, images: [String!]): User
  facebookConnect(code: String!): User
  editUserTags(userPersonality: [String!], userLifeStyle: [String!], userMusic: [String!], userSports: [String!], userMovies: [String!]): User
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  firstName: String!
  lastName: String
  email: String!
  isVerified: Boolean!
  facebookId: String
  gender: String
  occupation: String
  studying: String
  birthDay: DateTime
  working: String
  languages: [String!]
  userPersonality: [String!]
  userLifeStyle: [String!]
  userMusic: [String!]
  userSports: [String!]
  userMovies: [String!]
  userExtra: String
  images: [String!]
}

type Subscription {
  newLink: LinkSubscriptionPayload
  newVote: VoteSubscriptionPayload
}
